version: 2
jobs:
  build:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Start containers
          command: docker-compose up -d
      - run:
          name: Run PHP CS Fixer
          command: docker-compose exec -T web php-cs-fixer fix --diff --dry-run src/ --rules=@PSR2
      - restore_cache:
          name: Restore cache - vendor
          keys:
            - vendor-v4-{{ checksum "composer.lock" }}
      - run:
          name: Install PHP dependencies
          command: docker-compose exec -T web composer install
      - save_cache:
          paths:
            - ./vendor
          key: vendor-v4-{{ checksum "composer.lock" }}
      - run:
          name: Run PHP Units
          command: docker-compose exec -T web ./vendor/bin/phpunit --bootstrap vendor/autoload.php tests/
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Rsync the Application Sources
          command: |
            rsync -e ssh -avz --delete-after --exclude='.git/' --exclude='.env.local' --exclude='vendor' --exclude='var' ./ $SSH_USER@$SSH_HOST:$SERVER_APP_PATH
      - run:
          name: Start Docker Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $SERVER_APP_PATH && docker-compose up -d"
      - run:
          name: Configure Prod Env
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $SERVER_APP_PATH && echo 'APP_ENV=prod' > .env.local"
      - run:
          name: Install PHP Prod dependencies
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $SERVER_APP_PATH && bin/docker-composer install --prefer-dist --no-dev"
      - run:
          name: Update Database Schema
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $SERVER_APP_PATH && bin/docker-console doctrine:migrations:migrate --no-interaction"
      - run:
          name: Clear Cache
          command: |
            ssh $SSH_USER@$SSH_HOST "cd $SERVER_APP_PATH && bin/docker-console cache:clear"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
